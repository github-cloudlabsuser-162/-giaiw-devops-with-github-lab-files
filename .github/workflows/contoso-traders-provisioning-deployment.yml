name: contoso-traders-app-deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "src/ContosoTraders.Api.Carts/**"
      - "src/ContosoTraders.Api.Core/**"
      - "src/ContosoTraders.Api.Images/**"
      - "src/ContosoTraders.Api.Products/**"
      - "src/ContosoTraders.Ui.Website/**"

env:
  ACR_NAME: contosotradersacr
  AKS_CLUSTER_NAME: contoso-traders-aks
  SUB_DEPLOYMENT_REGION: eastus2
  RESOURCE_GROUP_PREFIX: contoso-traders
  UI_STORAGE_ACCOUNT_NAME: contosotradersui2
  UI_CDN_ENDPOINT_NAME: contoso-traders-ui2
  PRODUCTS_ACR_REPOSITORY_NAME: contosotradersapiproducts

jobs:
  deploy-carts-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.SERVICEPRINCIPAL }}

      - name: Extract ACR Password
        id: extract-acr-password
        run: |
          acr_password=$(az acr credential show -n "$ACR_NAME${{ secrets.ENVIRONMENT }}" \
            --query "passwords[0].value" -o tsv)
          echo "acrPassword=${acr_password}" >> $GITHUB_ENV

      - name: ACR Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}${{ secrets.ENVIRONMENT }}.azurecr.io
          username: ${{ env.ACR_NAME }}${{ secrets.ENVIRONMENT }}
          password: ${{ env.acrPassword }}

      - name: Docker Build and Push
        run: |
          docker build -t ${{ env.ACR_NAME }}${{ secrets.ENVIRONMENT }}.azurecr.io/${{ env.CARTS_ACR_REPOSITORY_NAME }}:latest \
            -t ${{ env.ACR_NAME }}${{ secrets.ENVIRONMENT }}.azurecr.io/${{ env.CARTS_ACR_REPOSITORY_NAME }}:${{ github.sha }} \
            ./src/ContosoTraders.Api.Carts
          docker push --all-tags ${{ env.ACR_NAME }}${{ secrets.ENVIRONMENT }}.azurecr.io/${{ env.CARTS_ACR_REPOSITORY_NAME }}

      - name: Deploy to Container App
        run: |
          az config set extension.use_dynamic_install=yes_without_prompt
          az containerapp update \
            -n ${{ env.CARTS_ACA_NAME }}${{ secrets.ENVIRONMENT }} \
            -g ${{ env.RESOURCE_GROUP_PREFIX }}-rg-${{ secrets.ENVIRONMENT }} \
            --image ${{ env.ACR_NAME }}${{ secrets.ENVIRONMENT }}.azurecr.io/${{ env.CARTS_ACR_REPOSITORY_NAME }}:${{ github.sha }}

  deploy-ui:
    runs-on: ubuntu-latest
    needs: [deploy-carts-api]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.SERVICEPRINCIPAL }}

      - name: Get API Endpoints
        run: |
          cartsApi=$(az keyvault secret show --vault-name "${{ env.KV_NAME }}${{ secrets.ENVIRONMENT }}" \
            --name cartsApiEndpoint --query value -o tsv)
          productsApi=$(az keyvault secret show --vault-name "${{ env.KV_NAME }}${{ secrets.ENVIRONMENT }}" \
            --name productsApiEndpoint --query value -o tsv)
          echo "CARTS_API_ENDPOINT=${cartsApi}" >> $GITHUB_ENV
          echo "PRODUCTS_API_ENDPOINT=${productsApi}" >> $GITHUB_ENV

      - name: Substitute Tokens in UI Config
        uses: cschleiden/replace-tokens@v1.2
        with:
          tokenPrefix: "{{"
          tokenSuffix: "}}"
          files: ./src/ContosoTraders.Ui.Website/.env
        env:
          CARTS_API_ENDPOINT: ${{ env.CARTS_API_ENDPOINT }}
          PRODUCTS_API_ENDPOINT: ${{ env.PRODUCTS_API_ENDPOINT }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Build UI
        run: |
          npm install --legacy-peer-deps
          npm run build
        working-directory: src/ContosoTraders.Ui.Website

      - name: Deploy to Azure Storage
        run: |
          az storage blob sync \
            --account-name "${{ env.UI_STORAGE_ACCOUNT_NAME }}${{ secrets.ENVIRONMENT }}" \
            -c '$web' \
            -s 'src/ContosoTraders.Ui.Website/build'

      - name: Purge CDN
        run: |
          az cdn endpoint purge --no-wait --content-paths '/*' \
            -n "${{ env.UI_CDN_ENDPOINT_NAME }}${{ secrets.ENVIRONMENT }}" \
            -g "${{ env.RESOURCE_GROUP_PREFIX }}-rg-${{ secrets.ENVIRONMENT }}" \
            --profile-name "${{ env.CDN_PROFILE_NAME }}${{ secrets.ENVIRONMENT }}"
